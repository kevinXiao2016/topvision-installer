; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{2A15CB65-50D2-4135-A1C9-9BE604D47859}
AppName=@AppName@
AppVerName=@AppName@@AppVerName@
AppPublisher=Victor
AppPublisherURL=@CorpUrl@
AppSupportURL=@CorpUrl@
AppUpdatesURL=@CorpUrl@
AppCopyright={cm:MyAppCopyright}
DefaultDirName= {reg:HKCU\Software\@CorpName@\@AppName@,InstallPath|{pf}\@CorpName@}
DefaultGroupName=@CorpName@
OutputBaseFilename=@AppName@-Setup
Compression=lzma
SolidCompression=yes
WindowVisible=yes
VersionInfoVersion=20
VersionInfoCompany=@CorpUrl@
VersionInfoDescription=@VersionInfoDescription@
WizardImageFile=wizard.bmp
CreateUninstallRegKey=no
UpdateUninstallLogAppName=no
DisableDirPage=yes
DisableProgramGroupPage=yes

[Languages]
Name: "cn"; MessagesFile: "compiler:Languages/Chinese.isl"
Name: "en"; MessagesFile: "compiler:Default.isl"

[LangOptions]
cn.LanguageName=简体中文
en.LanguageName=English

[Messages]
cn.BeveledLabel=升级 @AppName@@AppVerName@
en.BeveledLabel=@AppName@@AppVerName@ Update
cn.SetupAppTitle=升级
en.SetupAppTitle=Update
cn.SetupWindowTitle=升级 - %1
en.SetupWindowTitle=Update - %1
cn.WelcomeLabel1=欢迎使用[name]升级向导
en.WelcomeLabel1=Welcome to the [name] Update Wizard
cn.WelcomeLabel2=[name/ver] 即将升级到您的计算机中。%n%n建议您在继续升级之前关闭所有其它应用程序。
en.WelcomeLabel2=This will update [name/ver] on your computer. %n%nIt is recommended that you close all other applications before continuing.
cn.ExitSetupTitle=结束升级
en.ExitSetupTitle=Exit Update
cn.ExitSetupMessage=升级尚未完成。如果您现在退出，程序将不能被升级。%n%n您可以另外选择时间完成升级。%n%n要结束升级吗？
en.ExitSetupMessage=Update is not complete. If you exit now, the program will not be updated.%n%nYou may run Update again at another time to complete the update.%n%nExit Update?
cn.ButtonInstall=升级(&I)
en.ButtonInstall=Update(&I)
cn.WizardReady=准备升级
en.WizardReady=Ready to Update
cn.ReadyLabel1=升级程序正准备在您的机器中升级[name].
en.ReadyLabel1=Setup is now ready to begin updating [name] on your computer.
cn.ReadyLabel2a=继续升级请单击『升级』，如果您要回顾或修改一些设置，请单击『上一步』。
en.ReadyLabel2a=Click Update to continue with the update, or click Back if you want to review or change any settings.
cn.ReadyLabel2b=继续升级请单击『升级』。
en.ReadyLabel2b=Click Update to continue with the update.
cn.WizardInstalling=升级中
en.WizardInstalling=Updating
cn.InstallingLabel=正在升级[name], 请等待.
en.InstallingLabel=Please wait while Update update [name] on your computer.
; *** "Setup Completed" wizard page
cn.FinishedHeadingLabel=完成[name]升级向导
en.FinishedHeadingLabel=Completing the [name] Update Wizard
cn.FinishedLabelNoIcons=升级程序已完成[name]的升级.
en.FinishedLabelNoIcons=Update has finished updating [name] on your computer.
cn.FinishedLabel=升级程序已经在您的计算机中升级了[name]。选中升级后的图标可启动应用程序。
en.FinishedLabel=Update has finished updating [name] on your computer. The application may be launched by selecting the installed icons.
cn.ClickFinish=单击『完成』退出升级。
en.ClickFinish=Click Finish to exit Update.
cn.ProgramUpdateNonsupport =不支持从此版本的直接升级，请卸载后重新安装，如果需要保留历史数据，请联系网管开发人员。
en.ProgramUpdateNonsupport=Does not support update from this version,Please uninstall the program then to install the new version.Please contact the EMS developer if you want to remain the history data.

[CustomMessages]
cn.MyAppCopyright=Copyright(C)2010-2015,鼎点视讯科技有限公司版权所有
en.MyAppCopyright=Copyright(C)2010-2015,TOPVISION TECHNOLOGIES CO.,LTD. All rights reserved.
cn.FullInstall=完全安装
en.FullInstall=Full Install
cn.EponInstall=仅支持EPON安装
en.EponInstall=Epon install only
cn.CcmtsInstall=支持EPON和鼎点CMTS安装
en.CcmtsInstall=Epon&Cmts of Topvision install only
cn.CmtsInstall=支持其他厂商CMTS安装
en.CmtsInstall=Cmts of others install only
cn.WlanInstall=仅支持无线安装
en.WlanInstall=Wlan install only
cn.EocInstall=支持EOC和EPON安装
en.EocInstall=Epon&Eoc install only
cn.ApInstall=仅支持Ap安装
en.ApInstall=AP install only
cn.CustomInstall=自定义安装
en.CustomInstall=Custom install
cn.MainDesc=系统框架文件
en.MainDesc=Framework files
cn.ProductDesc=各个产品文件
en.ProductDesc=Product's files
cn.EponSupport=EPON管理所需要文件
en.EponSupport=Files of Epon support
cn.CcmtsSupport=CCMTS管理所需要文件
en.CcmtsSupport=Files of Ccmts support
cn.CmtsSupport=CMTS管理所需要文件
en.CmtsSupport=Files of Cmts support
cn.WlanSupport=无线管理所需要文件
en.WlanSupport=Files of Wlan support
cn.EocSupport=EOC管理所需要文件
en.EocSupport=Files of Eoc support
cn.ApSupport=AP管理所需要文件
en.ApSupport=Files of AP support
cn.StartService=启动@AppName@服务
en.StartService=Start @AppName@ Service
cn.StopService=停止@AppName@服务
en.StopService=Stop @AppName@ Service
cn.InstallService=安装@AppName@服务
en.InstallService=Install @AppName@ Service
cn.UninstallService=卸载@AppName@服务
en.UninstallService=Uninstall @AppName@ Service
cn.UninstallAppTitle=卸载
en.UninstallAppTitle=Uninstall
cn.AppClient=@AppName@客户端
en.AppClient=@AppName@ Client
cn.ToolsTitle=工具
en.ToolsTitle=Tools
cn.ProgramNotExisted=系统中没有安装基本程序，不能进行升级。请安装基本程序后进行升级安装。
en.ProgramNotExisted=The setup program not exist,Please install the setup program then to update.
cn.ProgramDestroyed=系统中基本程序被破坏不能进行升级，或者是旧的版本不支持升级，请卸载并重新安装基本程序后进行升级安装。
en.ProgramDestroyed=The setup program is destroyed or the old version can't update,Please uninstall the old program and install the setup program then to update.
cn.IsLatest=系统程序已经是最新的，不用更新。
en.IsLatest=The program is latest,Don't update again.
cn.StopServiceError=停止系统服务错误，请检查后服务是否停止。
en.StopServiceError=Stop Service error,Please check it and try it again.
cn.ProgramUpdateNonsupport=不支持从此版本的直接升级，请卸载后重新安装，如果需要保留历史数据，请联系网管开发人员。
en.ProgramUpdateNonsupport=Does not support update from this version,Please uninstall the program then to install the new version.Please contact the EMS developer if you want to remain the history data.
cn.LanguageTip=您选择的更新程序的语言(%2)与网管的语言(%1)不一致，本次升级不会更改网管界面的语言。
en.LanguageTip=Update language(%2) and @AppName@ language(%1) of your choice is not the same, and this update does not change the @AppName@ language.
cn.engineCreate=创建采集器程序
en.engineCreate=Create Engine Program
cn.MustAdminLoggedOn=您必须是管理员登录或者以管理员身份运行此安装程序。
en.MustAdminLoggedOn=You must be an administrator to log in or run the installation as an administrator.
cn.MissingWOW64APIs=您正在运行的Windows版本不具备执行64位安装的功能。要解决此问题，请在64位操作系统执行此安装。
en.MissingWOW64APIs=The version of Windows you are running does not include functionality required by Setup to perform a 64-bit installation. To correct this problem, please install in a 64-bit windows.
cn.BeginToBackup=开始备份...
en.BeginToBackup=Begin to backup...
cn.BackupFiles=正在备份%1...
en.BackupFiles=Backup %1 files...
cn.DeleteOldBackupFiles=正在删除旧的备份文件...
en.DeleteOldBackupFiles=Delete the old backup files...
cn.BakConfigTitle=备份配置
en.BakConfigTitle=Backup Config
cn.BakConfigDesc=请选择是否备份，如果选择备份将多花一些时间进行文件备份。如果升级后需要恢复升级之前的版本，请执行backup目录下的“restore.bat”.
en.BakConfigDesc=Please choose whether to back up, and if you choose the backup will take some time to file backup. If you need to restore the upgrade before the upgrade version, please perform the backup directory under the "restore.bat".
cn.BakConfigCaption=请选择:
en.BakConfigCaption=Please select:
cn.BakConfigText=是否备份%1
en.BakConfigText=Backup the version %1

[Files]
Source: "setup_background.bmp"; DestDir: "{tmp}"; Flags: dontcopy
Source: "setup_background_en.bmp"; DestDir: "{tmp}"; Flags: dontcopy
; Source: "README.TXT"; DestDir: "{app}"; Flags: isreadme
; 主文件
; 更新程序不更新bin，jre，mysql，jetty，conf下的配置文件
Source: "..\dist\ems\*"; Excludes: "\bin\*,\monitor\*,\mysql\data\*,\mysql\bin\*.bat,\mysql\*.cnf,\conf\*,\webapp\WEB-INF\conf\*"; DestDir: "{app}"; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\conf\*"; DestDir: "{app}\conf\"; Flags: overwritereadonly
Source: "..\dist\ems\conf\config.properties"; DestDir: "{app}\conf\"; Flags: onlyifdoesntexist
Source: "..\dist\ems\webapp\WEB-INF\conf\*"; Excludes: "config_en.properties"; DestDir: "{app}\webapp\WEB-INF\conf\"; Flags: onlyifdoesntexist
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
; bin\*.exe
Source: "..\dist\ems\bin\diskspace.exe"; DestDir: "{app}\bin\"; Flags: onlyifdoesntexist
Source: "..\dist\ems\bin\runEngine.*"; DestDir: "{app}\bin\"; Flags: overwritereadonly ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\bin\engineCreator.bat"; DestDir: "{app}\bin\"; Flags: overwritereadonly ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\bin\restore.bat"; DestDir: "{app}\backup\"; Flags: overwritereadonly ignoreversion recursesubdirs
Source: "..\dist\ems\bin\update.bat"; DestDir: "{app}\bin\"; Flags: onlyifdoesntexist
; monitor\*bat
Source: "..\dist\ems\monitor\monitorServicew.exe"; DestName: "monitorServicew.exe"; DestDir: "{app}\monitor\"; Flags: onlyifdoesntexist

Source: "..\dist\ems\monitor\monitor.bat"; DestName: "monitor.bat"; DestDir: "{app}\monitor\"; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\monitor\monitorInstall.bat"; DestName: "monitorInstall.bat"; DestDir: "{app}\monitor\"; Languages: cn; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\monitor\monitorRun.bat"; DestName: "monitorRun.bat"; DestDir: "{app}\monitor\"; Languages: cn; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\monitor\monitorStart.bat"; DestName: "monitorStart.bat"; DestDir: "{app}\monitor\"; Languages: cn; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\monitor\monitorStop.bat"; DestName: "monitorStop.bat"; DestDir: "{app}\monitor\"; Languages: cn; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\monitor\monitorUninstall.bat"; DestName: "monitorUninstall.bat"; DestDir: "{app}\monitor\"; Languages: cn; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs

Source: "..\dist\ems\monitor\monitor.bat"; DestName: "monitor.bat"; DestDir: "{app}\monitor\"; Languages: en; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\monitor\monitorInstall_en.bat"; DestName: "monitorInstall.bat"; DestDir: "{app}\monitor\"; Languages: en; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\monitor\monitorRun.bat"; DestName: "monitorRun.bat"; DestDir: "{app}\monitor\"; Languages: en; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\monitor\monitorStart_en.bat"; DestName: "monitorStart.bat"; DestDir: "{app}\monitor\"; Languages: en; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\monitor\monitorStop_en.bat"; DestName: "monitorStop.bat"; DestDir: "{app}\monitor\"; Languages: en; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs
Source: "..\dist\ems\monitor\monitorUninstall_en.bat"; DestName: "monitorUninstall.bat"; DestDir: "{app}\monitor\"; Languages: en; Flags: overwritereadonly skipifsourcedoesntexist ignoreversion recursesubdirs createallsubdirs

[Run]
Filename: "{app}\bin\nm3000Install.bat"; Description: "{cm:InstallService}"; Flags: skipifsilent
Filename: "{app}\bin\engineCreator.bat"; Description: "{cm:engineCreate}"; Flags: skipifsilent skipifdoesntexist
Filename: "{app}\bin\nm3000Start.bat"; Description: "{cm:StartService}"; Flags: nowait postinstall skipifsilent
Filename: "{app}\enginemgr\bin\engineMgrInstall.bat"; Description: "{cm:engineCreate}"; Flags: skipifsilent skipifdoesntexist
Filename: "{app}\enginemgr\bin\engineMgrStart.bat"; Description: "{cm:engineCreate}"; Flags: skipifsilent skipifdoesntexist

[code]
var
    sInstallPath, sLastVersion: String;
    bakPage: TwizardPage;
    bakCheckBox: TCheckBox;
//设置向导页状态文字
procedure SetStatusLabelText(const S: String);
begin
  WizardForm.StatusLabel.Caption := S;
  WizardForm.StatusLabel.Update;
end;

//设置向导页文件名文字
procedure SetFilenameLabelText(const S: String; const CallUpdate: Boolean);
begin
  WizardForm.FilenameLabel.Caption := MinimizePathName(S, WizardForm.FilenameLabel.Font, WizardForm.FileNameLabel.Width);
  if CallUpdate then
    WizardForm.FilenameLabel.Update;
end;

//备份文件夹
procedure backupDir(name: String);
var
    sRootPath, sBakPath: String;
    FindRec: TFindRec;
begin
    sRootPath := sInstallPath + name;
    sBakPath := sInstallPath + '\backup' + name;
    CreateDir(sBakPath);
    if FindFirst(sRootPath + '*', FindRec) then begin
        try
            repeat
            if (CompareText('.', FindRec.Name) = 0) or (CompareText('..', FindRec.Name) = 0) then
                continue;
            if DirExists(sRootPath+FindRec.Name) then begin
                CreateDir(sBakPath + FindRec.Name);
                backupDir(name + FindRec.Name + '\');
            end;
            if FindRec.Attributes and FILE_ATTRIBUTE_DIRECTORY = 0 then begin
                SetFilenameLabelText(sBakPath + FindRec.Name, False);
                FileCopy(sRootPath + FindRec.Name, sBakPath + FindRec.Name, False);
            end;
            until not FindNext(FindRec);
        finally
            FindClose(FindRec);
        end;
    end;
end;

procedure InitializeWizard();
var
    lbl: TLabel;
begin
    bakPage := CreateCustomPage(wpWelcome, CustomMessage('BakConfigTitle'), CustomMessage('BakConfigDesc'));
    lbl := TLabel.Create(bakPage);
    lbl.Parent := bakPage.Surface;
    lbl.Caption := CustomMessage('BakConfigCaption');
    bakCheckBox := TCheckBox.Create(bakPage);
    bakCheckBox.Parent := bakPage.Surface;
    bakCheckBox.Width := ScaleX(250);
    bakCheckBox.Caption := FmtMessage(CustomMessage('BakConfigText'), [sLastVersion]);
    bakCheckBox.Top := lbl.Top + 30;
end;
//判断是否已经安装过
function InitializeSetup(): Boolean;
var
    sStatus, sUninstallPath, sSelectComponents, sServiceType, sLanguage: String;
    ErrorCode: Integer;
begin
    Result := True;
    if (RegQueryStringValue(HKEY_CURRENT_USER, 'Software\@CorpName@\@AppName@', 'UninstallPath', sUninstallPath) = False) then begin
        MsgBox(CustomMessage('ProgramNotExisted'), mbConfirmation, MB_OK);
        Result := False;
        Exit;
    end;
    if (RegQueryStringValue(HKEY_CURRENT_USER, 'Software\@CorpName@\@AppName@', 'ServiceType', sServiceType) = False) then begin
        MsgBox(CustomMessage('ProgramUpdateNonsupport'), mbConfirmation, MB_OK);
        Result := False;
        Exit;
    end;
    RegQueryStringValue(HKEY_CURRENT_USER, 'Software\@CorpName@\@AppName@', 'Status', sStatus);
    if(sStatus = 'Uninstalled') then begin
        MsgBox(CustomMessage('ProgramNotExisted'), mbConfirmation, MB_OK);
        Result := False;
        Exit;
    end;
    if(FileExists(sUninstallPath) = False) then begin
        MsgBox(CustomMessage('ProgramDestroyed'), mbConfirmation, MB_OK);
        Result := False;
        Exit;
    end;
    RegQueryStringValue(HKEY_CURRENT_USER, 'Software\@CorpName@\@AppName@', 'LastVersion', sLastVersion);
    if(sLastVersion = '@AppVerName@') then begin
        MsgBox(CustomMessage('IsLatest'), mbConfirmation, MB_OK);
        Result := False;
        Exit;
    end;
    RegQueryStringValue(HKEY_CURRENT_USER, 'Software\@CorpName@\@AppName@', 'InstallPath', sInstallPath);
    if(Exec(sInstallPath+'\bin\nm3000Uninstall.bat', '', '', SW_SHOWNORMAL, ewWaitUntilTerminated, ErrorCode) = False) then begin
        MsgBox(CustomMessage('StopServiceError'), mbConfirmation, MB_OK);
        Result := False;
    end;
    if(Exec(sInstallPath+'\monitor\monitorUninstall.bat', '', '', SW_SHOWNORMAL, ewWaitUntilTerminated, ErrorCode) = False) then begin
        MsgBox(CustomMessage('StopServiceError'), mbConfirmation, MB_OK);
        Result := False;
    end;
    if FileExists(sInstallPath + '\enginemgr\bin\engineMgrUninstall.bat') then begin
        if(Exec(sInstallPath+'\enginemgr\bin\engineMgrUninstall.bat', '', '', SW_SHOWNORMAL, ewWaitUntilTerminated, ErrorCode) = False) then begin
            MsgBox(CustomMessage('StopServiceError'), mbConfirmation, MB_OK);
            Result := False;
        end;
    end;
    if (RegQueryStringValue(HKEY_CURRENT_USER, 'Software\@CorpName@\@AppName@', 'Language', sLanguage)) then begin
        if(sLanguage <> ActiveLanguage) then begin
            MsgBox(FmtMessage(CustomMessage('LanguageTip'), [sLanguage, ActiveLanguage]), mbConfirmation, MB_OK);
        end;
    end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
    sDate: String;
begin
    if CurStep=ssInstall then begin
        //backup
        //不管是否备份都删除原来的备份
        if DirExists(sInstallPath + '\backup') then begin
            SetStatusLabelText(CustomMessage('DeleteOldBackupFiles'));
            DelTree(sInstallPath + '\backup', True, True, True);
        end;
        if bakCheckBox.Checked then begin
            SetStatusLabelText(CustomMessage('BeginToBackup'));
            CreateDir(sInstallPath + '\backup');
            SetStatusLabelText(FmtMessage(CustomMessage('BackupFiles'), ['webapp']));
            backupDir('\webapp\');
            SetStatusLabelText(FmtMessage(CustomMessage('BackupFiles'), ['lib']));
            backupDir('\lib\');
            SetStatusLabelText(FmtMessage(CustomMessage('BackupFiles'), ['bin']));
            backupDir('\bin\');
            SetStatusLabelText(FmtMessage(CustomMessage('BackupFiles'), ['jre']));
            backupDir('\jre\');
            SaveStringToFile(sInstallPath + '\backup\version.reg', 'Windows Registry Editor Version 5.00' + #13#10 + #13#10, False);
            SaveStringToFile(sInstallPath + '\backup\version.reg', '[HKEY_CURRENT_USER\Software\@CorpName@\@AppName@]' + #13#10, True);
            SaveStringToFile(sInstallPath + '\backup\version.reg', '"LastVersion"="' + sLastVersion + '"' + #13#10, True);
        end;
        //backup end

        //安装时先删除原来topvision，report，license开头的jar包
        //Modify by Victor@20160503由于升级第三方jdk，删除原来的jar和jre
        RegQueryStringValue(HKEY_CURRENT_USER, 'Software\@CorpName@\@AppName@', 'InstallPath', sInstallPath);
        DelTree(sInstallPath + '\tmp', True, True, True);
        DelTree(sInstallPath + '\webapp\WEB-INF\classes', True, True, True);
        DelTree(sInstallPath + '\lib', True, True, True);
        DelTree(sInstallPath + '\jre', True, True, True);
        DelTree(sInstallPath + '\webapp\WEB-INF\lib', True, True, True);
    end;
    //安装结束后写注册表
    if CurStep=ssDone then begin
        sDate := GetDateTimeString('yyyy/mm/dd hh:nn:ss', '-', ':');
        RegWriteStringValue(HKEY_CURRENT_USER, 'Software\@CorpName@\@AppName@', 'Status', 'Update');
        RegWriteStringValue(HKEY_CURRENT_USER, 'Software\@CorpName@\@AppName@', 'LastVersion', '@AppVerName@');
        RegWriteStringValue(HKEY_CURRENT_USER, 'Software\@CorpName@\@AppName@\@AppVerName@', 'UpdateTime', sDate);
        RegWriteStringValue(HKEY_CURRENT_USER, 'Software\@CorpName@\@AppName@\@AppVerName@', 'UpdateVersion', '@AppVerName@-D@AppVerDate@');
        
        if bakCheckBox.Checked = False then begin
            DelTree(sInstallPath + '\backup', True, True, True);
        end;
    end;
end;
